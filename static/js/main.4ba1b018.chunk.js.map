{"version":3,"sources":["Resume.js","App.js","serviceWorker.js","index.js","images.svg"],"names":["Resume","props","fetch","then","response","json","data","console","log","info","profile","location","id","career","className","style","backgroundImage","borderRadius","color","boxShadow","src","logo","alt","width","basics","name","href","role","phone","border","Personal","DOB","age","Mother","Father","Religion","place_of_Birth","desired","gender","moccupation","foccupation","Education","college","Degree","Address","g_year","school","Address1","s_year","Home","map","values","index","key","to","pathname","App","exact","path","component","Resume1","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.4ba1b018.chunk.js","sourcesContent":["import React from 'react'\nimport data from './data.json';\nimport logo from './images.svg';\nimport './Resume.css';\nexport default function Resume(props) {\n\n    fetch('https://jsonplaceholder.typicode.com/posts')\n        .then(response=>response.json())\n        .then(data=>console.log(data))\n\n        let info=data.profile[props.location.data.id]\n        console.log(info.career)\n    return (\n\n\n\n    <div className=\"container\">\n        <div className=\"row\">\n            <div className=\"col-lg-3 col-md-4  col-sm-4 p-3 mt-5 left\">\n                <div className=\"card text-white text-center\" style={{backgroundImage:\"linear-gradient(to bottom,#2457d7,#3b125d)\",borderRadius:\"7%\",color:\"white\", boxShadow: \"4px 4px 5px 5px black\"}}>\n                    <div className=\"card-body main\">\n                        <div>\n                            <img src={logo} alt=\"profileIcon\" style={{width:\"70%\"}}/>\n                        </div>\n                        <div>\n                            <h6>{info.basics.name}</h6>\n                            <a href={\"mailto:\"+info.basics.role} className=\"text-white\"><p>{info.basics.role}</p></a>\n                            <a href={\"tel:\"+info.basics.phone} className=\"text-white\"><p>{info.basics.phone}</p></a>\n                            <p className=\"btn btn-success rounded-pill text-white  hi\"><h6>Viewed Profile</h6></p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-lg-8 col-md-8 col-sm-8 right\">\n                <div className=\"card\" style={{border: \"solid 12px blue\",borderRadius:\"7%\", boxShadow: \"4px 4px 5px 5px black\"}}>\n                    <div className=\"card-body\">\n                        <h1 className=\"text-center\">RESUME</h1>\n                        <hr/>\n                        <div>\n                            <h3>CARRER OBJECTIVE</h3>\n                            <hr/>\n                            <p>{info.career}</p>\n                        </div>\n                        <div>\n                            <h3>PERSONAL INFORMATION</h3>\n                            <hr/>\n                            <div>\n                                <div> \n                                    <ul>\n                                        <li>Date of Birth:{info.Personal.DOB}</li>\n                                        <li>Age:{info.Personal.age}</li>\n                                        <li>Mother:{info.Personal.Mother}</li>\n                                        <li>Father:{info.Personal.Father}</li>\n                                        <li>Religion:{info.Personal.Religion}</li>\n                                    </ul>\n                                </div>\n                                <div> \n                                    <ul>\n                                        <li>Place of Birth:{info.Personal.place_of_Birth}</li>\n                                        <li>Position Desired:{info.Personal.desired}</li>\n                                        <li>Gender:{info.Personal.gender}</li>\n                                        <li>Occupation:{info.Personal.moccupation}</li>\n                                        <li>Occupation:{info.Personal.foccupation}</li>\n                                        \n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <h3 >EDUCATION ATTAINMENT</h3>\n                            <hr/>\n                            <h4 >Tertiary Education</h4>\n                            <ul>\n                                <li>college:{info.Education.college}</li>\n                                <li>Degree:{info.Education.Degree}</li>\n                                <li>Address:{info.Education.Address}</li>\n                                <li>year:{info.Education.g_year}</li>\n                            </ul>\n                            <hr/>\n                            <h4 >Elemenatry Education</h4>\n                            <ul>\n                                <li>School:{info.Education.school}</li>\n                                <li>Address:{info.Education.Address1}</li>\n                                <li>year:{info.Education.s_year}</li>\n                            </ul>\n                        </div>\n                        <div>\n                            <h3>PROJECTS</h3>\n                            <hr/>\n                            <p><span >OpenDB python Library</span><br/>\n                            problem:To develop a library for connecting databases<br/>\n                        Role:Algorithm Development</p>\n                            <br/>\n                            <p><span>Online Music Android App</span><br/>\n                        problem:to listen online music<br/>\n                            Role:Code Development in java</p>\n                        </div>        \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport data from './data.json';\nimport logo from './images.svg';\nimport {BrowserRouter,Route,Link} from 'react-router-dom';\nimport Resume1 from './Resume';\nfunction App() {\n  \n  return(\n    <BrowserRouter>\n      <Route exact path='/' component={Home}/>\n      <Route exact path='/resume' component={Resume1}/>\n    </BrowserRouter>\n  );\n}\n//home\nlet Home =()=>{\n  let profile=data.profile;\n  console.log(profile);\n  \n  return(\n    <div className=\"container\">\n      <div className=\"row justify-content-center mt-5\">\n        {profile.map((values,index)=>(\n          <div className=\"col-lg-3 col-md-4 col-sm-8 col-xs-10\" key={index}>\n            <div className=\"card text-white\" style={{backgroundImage:\"linear-gradient(to bottom,#2457d7,#3b125d)\",borderRadius:\"7%\",color:\"white\", boxShadow: \"4px 4px 5px 5px black\"}}>\n              <div className=\"card-body text-center\">\n              <img src={logo} alt=\"profileIcon\" style={{width:\"70%\"}}/>\n              <hr style={{color:\"white\"}}/>\n              <h3>{values.basics.name}</h3>\n              <a href={\"mailto:\"+values.basics.role} className=\"text-white\"><h5>{values.basics.role}</h5></a>\n              <a href={\"tel:\"+values.basics.phone} className=\"text-white\"><h5>{values.basics.phone}</h5></a>\n              <Link to={{pathname:'./resume',data:{id:index}}}className=\"btn btn-success rounded-pill\">View Profile</Link>\n              </div>\n              \n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/images.6f88fc6b.svg\";"],"sourceRoot":""}